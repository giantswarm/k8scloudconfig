apiVersion: v1
kind: Pod
metadata:
  name: k8s-api-server
  namespace: kube-system
  labels:
    app.kubernetes.io/name: api-server
    giantswarm.io/service-type: system
    k8s-app: api-server
    tier: control-plane
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ''
spec:
  hostNetwork: true
  priorityClassName: system-node-critical
  containers:
  - name: k8s-api-server
    image: {{ .Images.KubeApiserver }}
    env:
    - name: HOST_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    command:
    - kube-apiserver
    {{ range .Kubernetes.Apiserver.CommandExtraArgs -}}
    - {{ . }}
    {{ end -}}
    {{- if .Etcd.HighAvailability -}}
    - --apiserver-count=3
    {{ end -}}
    - --allow-privileged=true
    - --anonymous-auth=true
    - --insecure-port=0
    - --kubelet-https=true
    - --kubelet-preferred-address-types=InternalIP
    - --secure-port={{.Cluster.Kubernetes.API.SecurePort}}
    - --bind-address=0.0.0.0
    - --etcd-prefix={{.Cluster.Etcd.Prefix}}
    - --profiling=false
    - --service-account-lookup=true
    - --authorization-mode=RBAC
    - --feature-gates=TTLAfterFinished=true
    - --enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,ResourceQuota,DefaultStorageClass,PersistentVolumeClaimResize,PodSecurityPolicy,Priority,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook
    - --cloud-provider={{.Cluster.Kubernetes.CloudProvider}}
    - --service-cluster-ip-range={{.Cluster.Kubernetes.API.ClusterIPRange}}
    - --etcd-servers=https://127.0.0.1:2379
    - --etcd-cafile=/etc/kubernetes/ssl/etcd/server-ca.pem
    - --etcd-certfile=/etc/kubernetes/ssl/etcd/server-crt.pem
    - --etcd-keyfile=/etc/kubernetes/ssl/etcd/server-key.pem
    - --advertise-address=$(HOST_IP)
    - --runtime-config=api/all=true,scheduling.k8s.io/v1alpha1=true
    - --logtostderr=true
    - --tls-cert-file=/etc/kubernetes/ssl/apiserver-crt.pem
    - --tls-private-key-file=/etc/kubernetes/ssl/apiserver-key.pem
    - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256
    - --client-ca-file=/etc/kubernetes/ssl/apiserver-ca.pem
    - --audit-log-path=/var/log/apiserver/audit.log
    - --audit-log-maxage=30
    - --audit-log-maxbackup=30
    - --audit-log-maxsize=100
    - --audit-policy-file=/etc/kubernetes/policies/audit-policy.yaml
    - --encryption-provider-config=/etc/kubernetes/encryption/k8s-encryption-config.yaml
    - --request-timeout=1m
    - --requestheader-client-ca-file=/etc/kubernetes/ssl/apiserver-ca.pem
    - --requestheader-allowed-names=aggregator,{{.Cluster.Kubernetes.API.Domain}},{{.Cluster.Kubernetes.Kubelet.Domain}}
    - --requestheader-extra-headers-prefix=X-Remote-Extra-
    - --requestheader-group-headers=X-Remote-Group
    - --requestheader-username-headers=X-Remote-User
    - --service-account-issuer=https://{{.Cluster.Kubernetes.API.Domain}}
    - --service-account-key-file=/etc/kubernetes/ssl/service-account-key.pem
    - --service-account-signing-key-file=/etc/kubernetes/ssl/service-account-key.pem
    - --proxy-client-cert-file=/etc/kubernetes/ssl/apiserver-crt.pem
    - --proxy-client-key-file=/etc/kubernetes/ssl/apiserver-key.pem
    resources:
      requests:
        cpu: 300m
        memory: 300Mi
    livenessProbe:
      tcpSocket:
        port: {{.Cluster.Kubernetes.API.SecurePort}}
      initialDelaySeconds: 15
      timeoutSeconds: 15
    ports:
    - containerPort: {{.Cluster.Kubernetes.API.SecurePort}}
      hostPort: {{.Cluster.Kubernetes.API.SecurePort}}
      name: https
    volumeMounts:
    {{ range .Kubernetes.Apiserver.HostExtraMounts -}}
    - mountPath: {{ .Path }}
      name: {{ .Name }}
      readOnly: {{ .ReadOnly }}
    {{ end -}}
    - mountPath: /var/log/apiserver/
      name: apiserver-log
    - mountPath: /etc/kubernetes/encryption/
      name: k8s-encryption
      readOnly: true
    - mountPath: /etc/kubernetes/manifests
      name: k8s-manifests
      readOnly: true
    - mountPath: /etc/kubernetes/policies
      name: k8s-policies
      readOnly: true
    - mountPath: /etc/kubernetes/secrets/
      name: k8s-secrets
      readOnly: true
    - mountPath: /etc/kubernetes/ssl/
      name: ssl-certs-kubernetes
      readOnly: true
  volumes:
  {{ range .Kubernetes.Apiserver.HostExtraMounts -}}
  - hostPath:
      path: {{ .Path }}
    name: {{ .Name }}
  {{ end -}}
  - hostPath:
      path: /var/log/apiserver/
    name: apiserver-log
  - hostPath:
      path: /etc/kubernetes/encryption/
    name: k8s-encryption
  - hostPath:
      path: /etc/kubernetes/manifests
    name: k8s-manifests
  - hostPath:
      path: /etc/kubernetes/policies
    name: k8s-policies
  - hostPath:
      path: /etc/kubernetes/secrets
    name: k8s-secrets
  - hostPath:
      path: /etc/kubernetes/ssl
    name: ssl-certs-kubernetes
