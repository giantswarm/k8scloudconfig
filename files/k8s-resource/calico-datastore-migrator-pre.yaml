apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/name: calico-datastore-migrator-pre
  name: calico-datastore-migrator-pre
  namespace: kube-system
spec:
  ttlSecondsAfterFinished: 600
  template:
    metadata:
      labels:
        app.kubernetes.io/name: calico-datastore-migrator-pre
    spec:
      containers:
        - name: calicoctl
          image: {{ .Images.Calicoctl }}
          command:
            - /bin/sh
            - -c
          args:
            - if [ $DATASTORE_TYPE == "kubernetes" ]; then echo "Already migrated"; exit 0; fi;
              DATASTORE_TYPE=etcdv3 calicoctl datastore migrate lock &&
              DATASTORE_TYPE=etcdv3 calicoctl datastore migrate export > etcd-data &&
              DATASTORE_TYPE=kubernetes calicoctl datastore migrate import -f etcd-data
          env:
            - name: DATASTORE_TYPE
              valueFrom:
                configMapKeyRef:
                  key: datastore_type
                  name: calico-config
                  optional: true
            - name: ETCD_ENDPOINTS
              valueFrom:
                configMapKeyRef:
                  key: etcd_endpoints
                  name: calico-config
            - name: ETCD_CA_CERT_FILE
              value: /etc/kubernetes/ssl/calico/etcd-ca
            - name: ETCD_KEY_FILE
              value: /etc/kubernetes/ssl/calico/etcd-key
            - name: ETCD_CERT_FILE
              value: /etc/kubernetes/ssl/calico/etcd-cert
            - name: KUBECONFIG
              value: /etc/kubernetes/kubeconfig/addons.yaml
          volumeMounts:
            - mountPath: /etc/kubernetes/ssl
              name: certs
              readOnly: true
            - mountPath: /etc/kubernetes/kubeconfig/addons.yaml
              name: kubeconfig
              readOnly: true
              subPath: addons.yaml
      volumes:
        - name: certs
          hostPath:
            path: /etc/kubernetes/ssl
        - name: kubeconfig
          hostPath:
            path: /etc/kubernetes/kubeconfig
      hostNetwork: true
      nodeSelector:
        kubernetes.io/role: master
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      restartPolicy: Never
      serviceAccountName: calico-init
  backoffLimit: 4
