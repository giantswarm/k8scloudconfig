kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: kube-proxy
  namespace: kube-system
  labels:
    app.kubernetes.io/name: kube-proxy
    giantswarm.io/service-type: system
    k8s-app: kube-proxy
    kubernetes.io/cluster-service: "true"
spec:
  selector:
    matchLabels:
      k8s-app: kube-proxy
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kube-proxy
        giantswarm.io/service-type: system
        k8s-app: kube-proxy
        kubernetes.io/cluster-service: "true"
        giantswarm.io/monitoring: "true"
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
        prometheus.io/scrape: "true"
        prometheus.io/port: "10249"
        giantswarm.io/monitoring-path: "/metrics"
        giantswarm.io/monitoring-port: "10249"
    spec:
      tolerations:
      # Mark the pod as a critical add-on for rescheduling.
      - key: CriticalAddonsOnly
        operator: Exists
      # Make sure the pod gets scheduled on all nodes.
      - operator: Exists
      hostNetwork: true
      priorityClassName: system-node-critical
      serviceAccountName: kube-proxy
      containers:
        - name: kube-proxy
          image: {{ .Images.KubeProxy }}
          command:
          - kube-proxy
          - --config=/etc/kubernetes/config/proxy-config.yml
          - --v=2
          livenessProbe:
            httpGet:
              path: /healthz
              port: 10256
            initialDelaySeconds: 10
            periodSeconds: 3
          resources:
            requests:
              memory: "80Mi"
              cpu: "75m"
          securityContext:
            privileged: true
          volumeMounts:
          - mountPath: /etc/ssl/certs
            name: ssl-certs-host
            readOnly: true
          - mountPath: /etc/kubernetes/config/
            name: k8s-config
          - mountPath: /etc/kubernetes/kubeconfig/
            name: k8s-kubeconfig
            readOnly: true
          - mountPath: /etc/kubernetes/ssl
            name: ssl-certs-kubernetes
            readOnly: true
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
      volumes:
      - hostPath:
          path: /etc/kubernetes/config/
        name: k8s-config
      - hostPath:
          path: /etc/kubernetes/config/
        name: k8s-kubeconfig
      - hostPath:
          path: /etc/kubernetes/ssl
        name: ssl-certs-kubernetes
      - hostPath:
          path: /usr/share/ca-certificates
        name: ssl-certs-host
      - hostPath:
          path: /lib/modules
        name: lib-modules
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  labels:
    app.kubernetes.io/name: kube-proxy
    giantswarm.io/service-type: system
    k8s-app: kube-proxy
    kubernetes.io/cluster-service: "true"
  name: kube-proxy
  namespace: kube-system
spec:
  resourcePolicy:
    containerPolicies:
    - containerName: kube-proxy
      controlledValues: RequestsOnly
      mode: Auto
  targetRef:
    apiVersion: apps/v1
    kind: DaemonSet
    name: kube-proxy
  updatePolicy:
    updateMode: Auto
